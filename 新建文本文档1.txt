简答:
 1.创建并运行一个Servlet的基本流程
    浏览器向服务器发送请求,服务器解析客户端想要访问的主机,解析想要访问的web应用,解析想要访问的web资源即servlet,servlet在第一个请求
到来的时候,服务器加载servlet并创建实例同时调用init方法初始化,在处理请求之前,创建请求对象request和响应对象response对象,传给service方法
调用service方法处理请求,将需要响应的数据写入response对象

 2.Servlet的生命周期:
    servlet在第一次被访问时创建实例,创建之后服务器调用init方法进行初始化操作,之后一直放在服务器内存当中,当请求访问时,servlet的service
方法就会执行请求.当服务器关闭或web应用被移除,或web应用被销毁时调用distory方法进行善后.

 3.转发于重定向的区别:
   转发使用的是request对象,response对象重定向
   转发浏览器地址栏不变,重定向会变
   转发只发了一次请求,重定向可以看成发出了两次请求


 4.tomcat的目录结构及其作用:
   bin:  批处理文件的存放目录
   conf: 配置文件存放目录
   lib:  tomcat运行时需要的jar包存放目录
   logs: 日志文件存放目录
   temp: 临时文件存放目录
   webapps: localhost虚拟主机管理的目录,这个下面的web应用可以通过localhost主机来访问
   work: tomcat的工作目录

 5.http协议特点:
  一次请求一个响应
请求可以使用Get和Post方法传递数据

 6.Cookie和Session机制
   cookie:将会话中产生的数据保存在客户端,是客户端的技术:服务器通过set-cookie响应头将数据发送给浏览器保存,当需要时可以通过cookie请求头
获取上次的数据

   session:将会话中产生的数据保存在服务器端,是服务器端的技术浏览器发送请求访问服务器需要保存数据时,服务器会先检查内部有没有为当前
浏览器服务的session,如果没有就创建一个新的session对象,如果有就直接获取,将数据保存到session对象中浏览器再次访问服务器时,
服务器可以找到之前的session,从中取出数据


7.
  客户端请求的静态资源,都给默认servlet进行处理

 8.
  修改 Connector的port属性
  80端口在访问时可以不输入端口号

 9.
  先调用service方法判断请求方式,请求方式是get则在调用doGet方法,请求方式是Post则调用doPost方法

 10.
  首先看看有没有doPost()方法,其次在查看提交方式是什么,是否有相对对应的方法,在查看转发或者重定向的代码是不是路径有问题

 11.
  不对,随意定义成员变量和随意使用会导致线程安全问题

 12.
   有三种方法
   一:设置session生命的时间
   二:调用session.invalidate方法
   三:非正常关闭服务器

 13.
翻译:提供一种方法，可以跨多个页面请求或访问Web站点来标识用户，并存储有关该用户的信息。

servlet容器使用此接口在HTTP客户机
和HTTP服务器之间创建会话。会话在用户的多个连接或页面请求之间持续一段指定的时间。会话通常对应于一个用户，该用户可能访问
一个站点多次。服务器可以以多种方式维护会话，比如使用cookie或重写url。


此接口允许servlet

查看和操作有关会话的信息，
例如会话标识符、创建时间和最后一次访问时间

将对象绑定到会话，允许用户信息跨多个用户连接进行持久化

 14.
  lib:  tomcat运行时需要的jar包存放目录
  webapps: localhost虚拟主机管理的web应用目录,这个下面的web应用可以通过localhost主机来访问

 15.
   将项目文件打包成一个war包,复制到相对应的虚拟主机所在的文件夹中,文件夹会自动解压war包